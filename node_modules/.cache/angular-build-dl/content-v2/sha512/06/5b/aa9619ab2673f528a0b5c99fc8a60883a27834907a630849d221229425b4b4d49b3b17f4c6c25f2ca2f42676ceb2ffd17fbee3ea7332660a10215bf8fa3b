{"version":3,"sources":["webpack:///src/app/page/login/login.page.html","webpack:///src/app/page/login/login-routing.module.ts","webpack:///src/app/page/login/login.module.ts","webpack:///src/app/page/login/login.page.scss","webpack:///src/app/page/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","navCtrl","authService","formBuilder","firestore","errorMessage","validation_messages","type","message","validations_form","group","email","compose","required","pattern","password","minLength","value","loginUser","then","res","console","log","navigateForward","err","selector","template"],"mappings":"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","file":"page-login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"tertiary\\\">\\n    <ion-title>LOGIN</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n<br>\\n<ion-content class=\\\"ion-padding\\\">\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"loginUser(validations_form.value)\\\">\\n\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\" >Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\"></ion-input>\\n      <ion-icon name=\\\"mail-outline\\\" slot=\\\"start\\\"></ion-icon>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item >\\n      <ion-label position=\\\"floating\\\" >Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\n      <ion-icon name=\\\"lock-closed-outline\\\" slot=\\\"start\\\"></ion-icon>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-button expand= \\\"full\\\" size=\\\"large\\\" shape =\\\"round\\\" class= \\\"submit\\\" (click)=\\\"goWelcome()\\\">Login</ion-button>\\n\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n  </form>\\n  <p class=\\\"go-to-register\\\">\\n    No account yet? <a (click)=\\\"goToRegisterPage()\\\">Create an account.</a>\\n  </p>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule, ReactiveFormsModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2UvbG9naW4vbG9naW4ucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { AuthenticateService } from './../../service/authenticate.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n\n  constructor(\n\n    private navCtrl: NavController,\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder,\n    private firestore: AngularFirestore,\n\n  ) { }\n\n  ngOnInit() {\n\n    this.validations_form = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ])),\n    });\n  }\n\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Please enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n\n\n  loginUser(value) {\n    this.authService.loginUser(value)\n      .then(res => {\n        console.log(res);\n        this.errorMessage = \"\";\n        this.navCtrl.navigateForward('folder/welcome');\n      }, err => {\n        this.errorMessage = err.message;\n      })\n  }\n\n  goToRegisterPage() {\n    this.navCtrl.navigateForward('/register');\n  }\n  goWelcome(){\n    this.navCtrl.navigateForward('folder/welcome');\n  }\n\n}\n"]}